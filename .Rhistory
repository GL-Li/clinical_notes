scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.1, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.1, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type",
title = "Number (red) and Percent (black) of True Sample Type Predicted as Sample Types")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type",
title = "Model Prediction")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type",
title = "Model Prediction",
subtitle = "number (red) and percentage (red) of true sample type being predicted as other types")
ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type",
title = "Model Prediction",
subtitle = "number (red) and percentage (black) of true sample type being predicted as other types")
library(ggplot2)
library(grid)
library(gridExtra)
main_plot <- ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type",
title = "Model Prediction",
subtitle = "number (red) and percentage (black) of true sample types being predicted as other types")
grobs <- grobTree(
gp = gpar(fontsize = 14, fontface = "bold"),
textGrob(label = "Number", name = "title1",
x = unit(0.2, "lines"), y = unit(1.4, "lines"),
hjust = 0, vjust = 0, gp = gpar(col = "red")),
textGrob(label = " and ", name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0),
textGrob(label = "Percentage", name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(color = "purple"),
hjust = 0, vjust = 0),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0)
)
gg <- arrangeGrob(main_plot, top = grid_title)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
main_plot <- ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "gray20", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
grobs <- grobTree(
gp = gpar(fontsize = 14, fontface = "bold"),
textGrob(label = "Number", name = "title1",
x = unit(0.2, "lines"), y = unit(1.4, "lines"),
hjust = 0, vjust = 0, gp = gpar(col = "red")),
textGrob(label = " and ", name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0),
textGrob(label = "Percentage", name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(color = "purple"),
hjust = 0, vjust = 0),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2, "line"))
grid.arrange(gg)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
main_plot <- ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "orange", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number", name = "title1",
x = unit(0.2, "lines"), y = unit(1.4, "lines"),
hjust = 0, vjust = 0, gp = gpar(col = "red")),
textGrob(label = " and ", name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0),
textGrob(label = "Percentage", name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(color = "purple"),
hjust = 0, vjust = 0),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0)
)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number", name = "title1",
x = unit(0.2, "lines"), y = unit(1.4, "lines"),
hjust = 0, vjust = 0, gp = gpar(col = "red")),
textGrob(label = " and ", name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0),
textGrob(label = "Percentage", name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(color = "orange"),
hjust = 0, vjust = 0),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0, vjust = 0),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0, vjust = 0)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 0),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0,
vjust = 0),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 0)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 1,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 1,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "    Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "orange"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Type Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
main_plot <- ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.15, height = 0.15, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "purple", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "    Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "purple"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Types Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
main_plot <- ggplot() +
geom_jitter(aes(y_test_class, pred_class), color = "blue", size = 1,
width = 0.1, height = 0.1, alpha = 0.3) +
geom_text(data = cm_dt, aes(x - 0.05, y + 0.3, label = V1), hjust = 1,
color = "red") +
geom_text(data = pct_dt,
aes(x + 0.05, y + 0.3, label = paste0(round(100 * V1, 1), "%")),
color = "purple", hjust = 0) +
scale_x_continuous(breaks = 0:6, labels = classes) +
scale_y_continuous(breaks = 0:6, labels = classes) +
labs(x = "True Sample Type",
y = "Predicted Sample Type")
grobs <- grobTree(
gp = gpar(fontsize = 12, fontface = "bold"),
textGrob(label = "    Number",
name = "title1",
x = unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1,
gp = gpar(col = "red")),
textGrob(label = " and ",
name = "title2",
x = grobWidth("title1") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1),
textGrob(label = "Percentage",
name = "title3",
x = grobWidth("title1") + grobWidth("title2") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
gp = gpar(col = "purple"),
hjust = 0,
vjust = 1),
textGrob(label = " of True Sample Types Being Predicted as Other Types",
x = grobWidth("title1") + grobWidth("title2") + grobWidth("title3") + unit(0.2, "lines"),
y = unit(1.4, "lines"),
hjust = 0,
vjust = 1)
)
gg <- arrangeGrob(main_plot, top=grobs, padding = unit(2.6, "line"))
grid.arrange(gg)
