library(data.table)
library(magrittr)
dt <- fread("~/data/health-care-data/medical-transcriptions-kaggle/mtsamples.csv",
header = TRUE) %>%
.[, V1 := NULL]
library(stringr)
str_replace("ab.cd.ef", "\.", " ")
str_replace("ab.cd.ef", "\\.", " ")
str_replace_all("ab.cd.ef", "\\.", " ")
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_squish()
length(bbb)
str_remove_all("aA$3 dsa3B", '^[A-Z ]')
str_remove_all("aA$3 dsa3B", '^[A-Z ]+')
str_remove_all("aA$3 dsa3B", '[^A-Z ]+')
str_remove_all("aA$3 dsa3B", '[^A-Z ]')
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_squish() %>%
str_remove_all("[^A-Z ]")
bbb[1:10]
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_squish() %>%
str_remove_all("[^A-Z ]{3,}")
bbb[1:10]
?str_split
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_remove_all("[^A-Z ]") %>%
str_squish()
bbb[1:10]
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_remove_all("[^A-Z ]") %>%
str_squish() %>%
str_extract_all("[A-Z]{4,}")
bbb[1:10]
ccc = str_extract_all(dt$transcription, "[A-Z ]{4,}")
ccc[1:10]
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_squish() %>%
str_extract_all("[A-Z]{4,}")
bbb[1:10]
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_squish() %>%
str_extract_all("[A-Z ]{4,}")
bbb[1:10]
# categories in transcription
bbb = str_replace_all(dt$transcription, "\\.", " ") %>%
str_squish() %>%
str_extract_all("[A-Z][A-Z ]{2,}[A-Z]")
bbb[1:10]
ccc = unlist(bbb) %>% unique()
ccc
table(ccc)
table(c("ab", "ab", "c"))
ccc
CCC[1:100]
ccc[1:100]
table(c("ab", "c", "c"))
table(ccc[1:100])
library(rvest)
library(stringr)
sample_url <- "https://www.mtsamples.com/site/pages/sample.asp?Type=3-Allergy%20/%20Immunology&Sample=386-Allergic%20Rhinitis"
sample_page <- read_html(sample_url)
transcript_category <- html_node(css = "b") %>^
html_text()
transcript_category <- html_node(css = "sampletext b") %>%
html_text()
transcript_category <- sample_page %>%
html_node(css = "sampletext b") %>%
html_text()
transcript_category <- sample_page %>%
html_node(css = "b") %>%
html_text()
transcript_category <- sample_page %>%
html_nodes(css = "b") %>%
html_text()
transcript_category
aaa = transcript_category
str_extract(aaa, "[A-Z]{4,}")
str_extract(aaa, "[A-Z]{4,}") -> bbb
bbb[!is.na(bbb)]
?str_extract
bbb
bbb %>%
.[is.na(.)]
.[!is.na(.)]
bbb %>% .[!is.na(.)]
category <- sample_page %>%
html_nodes(css = "b") %>%
html_text() %>%
str_extract("[A-Z]{3,}") %>%
.[!is.na(.)] %>%
setdiff("NOTE")
category
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text()
# extract everything between "Medical Specialty: " and "Sample Name: "
sample_type <- str_extract(sample_text, "(?<=Medical Specialty:).+(?=Sample Name:)") %>%
str_trim() %>% str_squish()
sample_name <- str_extract(sample_text, "(?<=Sample Name:).+(?=\r\n)") %>%
str_trim() %>% str_squish()
description <- str_extract(sample_text, "(?<=Description:).+(?=\r\n )") %>%
str_trim() %>% str_squish()
sample_text
# presciption include a lot of things
prescription <- str_extract(sample_text, "(?=Description:).+(?=\r\n )")
transcription <- sample_text %>%
str_extract("(?=Sample Type:).+(?=\r\n        \t\t\r\n\t\t\r)")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text()
sample_text
transcription <- sample_text %>%
str_extract("(?=Sample Type:).+(?=\r\n        \t\t\r\n\t\t\r)")
transcription <- sample_text %>%
str_extract("Sample Type:.+(?=\r\n        \t\t\r\n\t\t\r)")
transcription <- sample_text %>%
str_extract("Sample Type.+(?=\r\n        \t\t\r\n\t\t\r)")
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=\r\n        \t\t\r\n\t\t\r)")
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=\r\n        \t\t\r\n\t\t\r)")
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=\r\n")
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=\r\n)")
transcription
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=NOTE)")
transcription <- sample_text %>%
str_extract("(?=Sample Type).+")
transcription
transcription <- sample_text %>%
str_extract("(?=Sample Type).+$")
transcription <- sample_text %>%
str_extract("(?=Sample Type).+")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("\r|\t\n")
sample_text
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_replace_all("\r|\t\n", "")
sample_text
sample_text -> aaa
aaa
?str_remove
str_remove_all(aaa, "\n")
str_remove_all(aaa, "\t")
str_remove_all(aaa, "\r")
aaa
aaa
str_remove_all(aaa, "\r|\t")
str_remove_all(aaa, "(\r|\t)")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove("\t") %>%
str_remove("\t")
sample_text
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove("\n") %>%
str_remove("\t")
aaa
str_remove(aaa, "\n")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("\n") %>%
str_remove_all("\t")
sample_text
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("\n") %>%
str_remove_all("\t") %>%
str_remove_all("\r")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("(\n|\t|\r)")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("(\n|\t|\r)")
sample_text
transcription <- sample_text %>%
str_extract("(?=Sample Type).+")
transcription
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=Keywords)")
transcription
ccc = unlist(bbb)
table(ccc)
sort(table(ccc))
?sort
sort(table(ccc), decreasing = T)
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("(\t|\r)")
transcription
sample_text
?html_attr
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("(\n|\t|\r)")
sample_text
transcription <- sample_text %>%
str_extract("(?=Sample Type).+(?=NOTE)")
transcription
sample_url <- "https://www.mtsamples.com/site/pages/sample.asp?Type=3-Allergy%20/%20Immunology&Sample=386-Allergic%20Rhinitis"
sample_page <- read_html(sample_url)
# category in transcribes
category <- sample_page %>%
html_nodes(css = "b") %>%
html_text() %>%
str_extract("[A-Z]{3,}") %>%
.[!is.na(.)] %>%
setdiff("NOTE")
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text() %>%
str_remove_all("(\n|\t|\r)")
# extract everything between "Medical Specialty: " and "Sample Name: "
sample_type <- str_extract(sample_text, "(?<=Medical Specialty:).+(?=Sample Name:)") %>%
str_trim() %>% str_squish()
sample_name <- str_extract(sample_text, "(?<=Sample Name:).+(?=\r\n)") %>%
str_trim() %>% str_squish()
sample_text
sample_name <- str_extract(sample_text, "(?<=Sample Name:).+(?=    )") %>%
str_trim() %>% str_squish()
sample_name <- str_extract(sample_text, "(?<=Sample Name:).+(?=\s\s\s\s)") %>%
str_trim() %>% str_squish()
sample_name <- str_extract(sample_text, "(?<=Sample Name:).+(?=\s\s\s\s)") %>%
str_trim() %>% str_squish()
sample_text <- sample_page %>%
html_node(xpath = '//*[@id="sampletext"]') %>%
html_text()
sample_text
# extract everything between "Medical Specialty: " and "Sample Name: "
sample_type <- str_extract(sample_text, "(?<=Medical Specialty:).+(?=Sample Name:)") %>%
str_trim() %>% str_squish()
sample_name <- str_extract(sample_text, "(?<=Sample Name:).+(?=\r\n)") %>%
str_trim() %>% str_squish()
transcription <- sample_text %>%
str_remove_all("(\n|\t|\r)") %>%
str_extract("(?=Sample Type).+(?=NOTE)")
transcription
sample_text
library(data.table)
library(magrittr)
library(stringr)
dt <- fread("~/data/health-care-data/medical-transcriptions-kaggle/mtsamples.csv",
header = TRUE) %>%
.[, V1 := NULL]
names(dt)
View(dt)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
